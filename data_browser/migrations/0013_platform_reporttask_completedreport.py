# Generated by Django 4.2.10 on 2024-10-16 08:50

import data_browser.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def create_main_platform_report(apps, schema_editor):
    Platform = apps.get_model("data_browser", "Platform")
    Platform.objects.get_or_create(key="main")


class Migration(migrations.Migration):



    dependencies = [
        ('data_browser', '0012_can_share'),
    ]

    operations = [
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.CharField(default=data_browser.models.get_id, max_length=12, primary_key=True, serialize=False)),
                ('key', models.CharField(help_text='The platform key', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReportTask',
            fields=[
                ('id', models.CharField(default=data_browser.models.get_id, max_length=12, primary_key=True, serialize=False)),
                ('owner', models.CharField(max_length=255)),
                ('report_name', models.CharField(max_length=255)),
                ('generator', models.TextField()),
                ('background_task_id', models.CharField(max_length=255)),
                ('kwargs', models.JSONField(default=dict)),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('accumulating', 'Accumulating'), ('processing', 'Processing'), ('storing', 'Storing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('error', 'Error'), ('expired', 'Expired')], default='pending', max_length=63)),
                ('traceback', models.TextField(default='', help_text='Error information')),
                ('started', models.DateTimeField(default=django.utils.timezone.now, help_text='When Report Request was started')),
                ('stopped', models.DateTimeField(default=None, help_text='When Report was stopped', null=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_tasks', to='data_browser.platform')),
            ],
        ),
        migrations.CreateModel(
            name='CompletedReport',
            fields=[
                ('id', models.CharField(default=data_browser.models.get_id, max_length=12, primary_key=True, serialize=False)),
                ('content', models.JSONField(default=dict)),
                ('meta_data', models.JSONField(default=dict)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_on', models.DateTimeField()),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_browser.reporttask')),
            ],
        ),

        migrations.RunPython(create_main_platform_report, migrations.RunPython.noop),
    ]
